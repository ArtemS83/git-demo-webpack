const dt = new Date(-5000000);
console.log(dt);
console.log(dt.getDate());
dt.setDate(-55555);
console.log(dt);
setInterval(() => {
  //   console.log(new Date());
}, 1000);

let interwalId = null;
const timer = {
  start() {
    const startTime = Date.now();
    interwalId = setInterval(() => {
      const currentTime = Date.now();

      //   console.log('startTime', startTime);

      //   console.log('currentTime', currentTime);
      const deltaTime = currentTime - startTime;
      getTimeComponents(deltaTime);
      //   console.log('deltaTime', deltaTime);
    }, 1000);
  },
  stop() {
    clearInterval(interwalId);
    interwalId = null;
  },
};

timer.start();
setTimeout(() => {
  timer.stop();
  console.log('stop 5s');
}, 5000);
/*
 * - –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 * - –í—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –≤ –Ω–∏—Ö –≤–º–µ—â–∞–µ—Ç—Å—è —á–∞—Å–æ–≤/–º–∏–Ω—É—Ç/—Å–µ–∫—É–Ω–¥
 * - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—å–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ hours, mins, secs
 * - –ê–¥—Å–∫–∞—è –∫–æ–ø–∏–ø–∞—Å—Ç–∞ —Å–æ —Å—Ç–µ–∫–∞ üí©
 */
function getTimeComponents(time) {
  const hours = pad(
    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),
  );
  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));
  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));
  console.log(`${hours}:${mins}:${secs}`); // timer on console log
  //   return { hours, mins, secs };
}

/*
 * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ, –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å—Ç—Ä–æ–∫–µ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ 0 –µ—Å–ª–∏ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ 2-—Ö –∑–Ω–∞–∫–æ–≤
 */
function pad(value) {
  return String(value).padStart(2, '0');
}
