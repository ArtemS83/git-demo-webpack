{"version":3,"sources":["webpack:///./js/CRUD-axios-async.js"],"names":["refs","signupBtn","document","querySelector","loginBtn","logoutBtn","signupForm","loginForm","registrationBtn","textError","userName","userEmail","contentForm","formADD","listContacs","textNoContacts","formUpdate","axios","defaults","baseURL","setToken","token","headers","common","onRegistrationUser","e","preventDefault","classList","add","dataNewUser","currentTarget","elements","value","email","password","name","post","then","data","textContent","user","reset","remove","catch","error","console","log","onLoginUser","onLoginDataUser","dataValue","fetchLogin","getContacts","get","contacts","innerHTML","length","render","renderContacts","params","items","map","id","number","join","insertAdjacentHTML","dataUser","addEventListener","newContact","dataNewContact","item","push","target","dataset","type","nodeName","idValue","delete","nameContactRef","numberContactRef","updateContact","onUpdateContact","dataUpdateContact","patch","fetchupdateContactFn","removeEventListener"],"mappings":"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","file":"main.738cd0cbe89d56cf77d5.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst refs = {\r\n  signupBtn: document.querySelector('.signup'),\r\n  loginBtn: document.querySelector('.login'),\r\n  logoutBtn: document.querySelector('.logout'),\r\n  signupForm: document.querySelector('.form-signup'),\r\n  loginForm: document.querySelector('.form-login'),\r\n  registrationBtn: document.querySelector('.form-signup button'),\r\n  textError: document.querySelector('.span-error'),\r\n  userName: document.querySelector('.user-info .name'),\r\n  userEmail: document.querySelector('.user-info .email'),\r\n  contentForm: document.querySelector('.content'),\r\n  formADD: document.querySelector('.form'),\r\n  listContacs: document.querySelector('.js-list'),\r\n  textNoContacts: document.querySelector('.span-no-contacts'),\r\n  formUpdate: document.querySelector('.form-update'),\r\n};\r\n\r\n////==========api.js axois =======//\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\nconst setToken = token => {\r\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n};\r\n\r\n//==========api.js fetch=======//\r\n// const BASE_URL = 'https://goit-phonebook-api.herokuapp.com';\r\n// let Token = '';\r\n//\r\n\r\n//==================sign up======================//\r\n\r\nrefs.signupBtn.addEventListener('click', onSingUp);\r\n\r\nfunction onSingUp() {\r\n  refs.signupBtn.classList.add('is-hidden');\r\n  refs.loginBtn.classList.add('is-hidden');\r\n  refs.signupForm.classList.remove('is-hidden');\r\n  refs.signupForm.addEventListener('submit', onRegistrationUser);\r\n}\r\n\r\nfunction onRegistrationUser(e) {\r\n  e.preventDefault();\r\n  refs.textError.classList.add('is-hidden');\r\n  const userName = e.currentTarget.elements.userName.value;\r\n  const email = e.currentTarget.elements.email.value;\r\n  const password = e.currentTarget.elements.password.value;\r\n  const signupData = {\r\n    name: userName,\r\n    email,\r\n    password,\r\n  };\r\n  onGetDataUser(signupData);\r\n}\r\n\r\nfunction onGetDataUser(dataValue) {\r\n  fetchSignup(dataValue)\r\n    .then(data => {\r\n      // Token = data.token;\r\n      refs.userName.textContent = data.user.name;\r\n      refs.userEmail.textContent = data.user.email;\r\n      refs.signupForm.reset();\r\n      refs.textError.classList.add('is-hidden');\r\n      refs.signupForm.classList.add('is-hidden');\r\n      refs.contentForm.classList.remove('is-hidden');\r\n      refs.logoutBtn.classList.remove('is-hidden');\r\n      refs.textNoContacts.classList.remove('is-hidden');\r\n    })\r\n    .catch(error => {\r\n      refs.textError.classList.remove('is-hidden');\r\n      console.log(error);\r\n    });\r\n}\r\n\r\n//=================LOGIN===============//\r\n\r\nrefs.loginBtn.addEventListener('click', onLogin);\r\n\r\nfunction onLogin() {\r\n  refs.signupBtn.classList.add('is-hidden');\r\n  refs.loginBtn.classList.add('is-hidden');\r\n  refs.loginForm.classList.remove('is-hidden');\r\n  refs.loginForm.addEventListener('submit', onLoginUser);\r\n}\r\n\r\nfunction onLoginUser(e) {\r\n  e.preventDefault();\r\n  refs.textError.classList.add('is-hidden');\r\n  const email = e.currentTarget.elements.email.value;\r\n  const password = e.currentTarget.elements.password.value;\r\n  const loginData = {\r\n    email,\r\n    password,\r\n  };\r\n  onLoginDataUser(loginData);\r\n}\r\n//===============saync/await  try/catch====//\r\n\r\nasync function onLoginDataUser(dataValue) {\r\n  try {\r\n    const { user } = await fetchLogin(dataValue);\r\n    refs.userName.textContent = user.name;\r\n    refs.userEmail.textContent = user.email;\r\n    refs.loginForm.reset();\r\n    refs.textError.classList.add('is-hidden');\r\n    refs.loginForm.classList.add('is-hidden');\r\n    refs.contentForm.classList.remove('is-hidden');\r\n    refs.logoutBtn.classList.remove('is-hidden');\r\n    getContacts();\r\n  } catch (error) {\r\n    refs.textError.classList.remove('is-hidden');\r\n    console.log(error);\r\n  }\r\n}\r\n// function onLoginDataUser(dataValue) {\r\n//   fetchLogin(dataValue)\r\n//     .then(data => {\r\n//       // Token = data.token;\r\n//       refs.userName.textContent = data.user.name;\r\n//       refs.userEmail.textContent = data.user.email;\r\n//       refs.loginForm.reset();\r\n//       refs.textError.classList.add('is-hidden');\r\n//       refs.loginForm.classList.add('is-hidden');\r\n//       refs.contentForm.classList.remove('is-hidden');\r\n//       refs.logoutBtn.classList.remove('is-hidden');\r\n//       // getContacts(Token);\r\n//       getContacts();\r\n//     })\r\n//     .catch(error => {\r\n//       refs.textError.classList.remove('is-hidden');\r\n//       console.log(error);\r\n//     });\r\n// }\r\n\r\n//=================LOGOUT===============//\r\n\r\nrefs.logoutBtn.addEventListener('click', onLogout);\r\n\r\nfunction onLogout() {\r\n  fetchLogout() //приобычном fetch было fetchLogout(Token)\r\n    .then(() => {\r\n      // Token = '';\r\n      refs.userName.textContent = '';\r\n      refs.userEmail.textContent = '';\r\n      refs.logoutBtn.classList.add('is-hidden');\r\n      refs.textError.classList.add('is-hidden');\r\n      refs.loginForm.classList.add('is-hidden');\r\n      refs.contentForm.classList.add('is-hidden');\r\n      refs.signupBtn.classList.remove('is-hidden');\r\n      refs.loginBtn.classList.remove('is-hidden');\r\n      refs.listContacs.innerHTML = '';\r\n      refs.textNoContacts.classList.add('is-hidden');\r\n      refs.formUpdate.classList.add('is-hidden');\r\n    })\r\n    .catch(error => {\r\n      refs.textError.classList.remove('is-hidden');\r\n      console.log(error);\r\n    });\r\n}\r\n\r\n//=================getContacs===============//\r\n\r\nfunction getContacts() {\r\n  fetchСontacts()\r\n    .then(data => {\r\n      renderContacts(data);\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\n//=============render contacts=======//\r\n\r\nfunction renderContacts(contacts) {\r\n  refs.listContacs.innerHTML = '';\r\n  if (contacts.length <= 0) {\r\n    refs.textNoContacts.classList.remove('is-hidden');\r\n    return;\r\n  }\r\n  render(contacts);\r\n}\r\n\r\n//===================template contact===========//\r\n\r\nfunction render(params) {\r\n  const items = params\r\n    .map(\r\n      ({ id, name, number }) =>\r\n        `<li>\r\n        <span class=\"js-name-${id}\">${name}</span>:  <span class=\"js-number-${id}\">${number}</span>\r\n        \r\n          <button class=\"delete\" data-id=${id} data-type=\"delete\">delete</button>\r\n          <button class=\"update\" data-id=${id} data-type=\"update\">update</button>\r\n        </li>`,\r\n    )\r\n    .join('');\r\n  refs.listContacs.insertAdjacentHTML('beforeend', items);\r\n}\r\n\r\n//=============ADD contact=======//\r\n\r\nrefs.formADD.addEventListener('submit', onAddContact);\r\n\r\nfunction onAddContact(e) {\r\n  e.preventDefault();\r\n  const name = e.currentTarget.elements.name.value;\r\n  const number = e.currentTarget.elements.number.value;\r\n  const newContact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  fetchAddNewContact(newContact)\r\n    .then(data => {\r\n      const item = [];\r\n      item.push(data);\r\n      render(item);\r\n      refs.textError.classList.add('is-hidden');\r\n    })\r\n    .then(() => {\r\n      newContact.name = '';\r\n      newContact.value = '';\r\n      refs.formADD.reset();\r\n      refs.textNoContacts.classList.add('is-hidden');\r\n    })\r\n    .catch(error => {\r\n      refs.textError.classList.remove('is-hidden');\r\n      console.log(error);\r\n    });\r\n}\r\n\r\n//=============Delete and update contact=======//\r\n\r\nrefs.listContacs.addEventListener('click', handleContactClick);\r\n\r\nfunction handleContactClick(e) {\r\n  const { id, type } = e.target.dataset;\r\n\r\n  if (e.target.nodeName !== 'BUTTON') {\r\n    return;\r\n  }\r\n\r\n  if (id && type === 'delete') {\r\n    fetchdeleteContact(id)\r\n      .then(() => {\r\n        refs.textError.classList.add('is-hidden');\r\n        // getContacts(Token);//fetch method\r\n        getContacts();\r\n      })\r\n      .catch(error => {\r\n        refs.textError.classList.remove('is-hidden');\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  if (id && type === 'update') {\r\n    const nameContactRef = document.querySelector(`.js-name-${id}`);\r\n    const numberContactRef = document.querySelector(`.js-number-${id}`);\r\n    const updateContact = {\r\n      updateContact: nameContactRef.textContent,\r\n      number: numberContactRef.textContent,\r\n    };\r\n    refs.contentForm.classList.add('is-hidden');\r\n    refs.formUpdate.classList.remove('is-hidden');\r\n    refs.formUpdate.elements.name.value = updateContact.updateContact;\r\n    refs.formUpdate.elements.number.value = updateContact.number;\r\n\r\n    refs.formUpdate.addEventListener('submit', onUpdateContact);\r\n\r\n    function onUpdateContact(e) {\r\n      e.preventDefault();\r\n      const name = e.target.elements.name.value;\r\n      const number = e.target.elements.number.value;\r\n      const updateData = {\r\n        name,\r\n        number,\r\n      };\r\n      fetchupdateContactFn(updateData, id)\r\n        .then(() => {\r\n          refs.textError.classList.add('is-hidden');\r\n          refs.formUpdate.classList.add('is-hidden');\r\n          refs.formUpdate.reset();\r\n          refs.contentForm.classList.remove('is-hidden');\r\n          // getContacts(Token);//fetch method\r\n          getContacts();\r\n        })\r\n        .catch(error => {\r\n          refs.textError.classList.remove('is-hidden');\r\n          console.log(error);\r\n        });\r\n      refs.formUpdate.removeEventListener('submit', onUpdateContact); //снимаем слушатель,чтобы не дублировать запросы\r\n    }\r\n  }\r\n}\r\n//\r\n//\r\n\r\n//===========================api.js AXIOS===================//\r\n\r\nfunction fetchSignup(dataNewUser) {\r\n  return axios.post(`/users/signup`, dataNewUser).then(({ data }) => {\r\n    setToken(data.token);\r\n    return data;\r\n  });\r\n}\r\n\r\nfunction fetchLogin(dataUser) {\r\n  return axios.post('/users/login', dataUser).then(({ data }) => {\r\n    setToken(data.token);\r\n    return data;\r\n  });\r\n}\r\n\r\n// const fetchLogin = dataUser =>\r\n//   axios.post('/users/login', dataUser).then(({ data }) => {\r\n//     setToken(data.token);\r\n//     return data;\r\n//   });\r\n\r\nfunction fetchLogout() {\r\n  return axios.post(`/users/logout`);\r\n}\r\n\r\nfunction fetchСontacts() {\r\n  return axios.get(`/contacts`).then(({ data }) => data);\r\n}\r\n\r\nfunction fetchAddNewContact(dataNewContact) {\r\n  return axios.post(`/contacts`, dataNewContact).then(({ data }) => data);\r\n}\r\n\r\nfunction fetchupdateContactFn(dataUpdateContact, idValue) {\r\n  return axios\r\n    .patch(`/contacts/${idValue}`, dataUpdateContact)\r\n    .then(({ data }) => data);\r\n}\r\n\r\nfunction fetchdeleteContact(idValue) {\r\n  return axios.delete(`/contacts/${idValue}`).then(({ data }) => data);\r\n}\r\n\r\n//====================api.js (axios async/await)=============//\r\n\r\n// async function fetchSignup(dataNewUser) {\r\n//   const newUser = await axios.post(`/users/signup`, dataNewUser);\r\n//   const { data } = newUser;\r\n//   setToken(data.token);\r\n//   return data;\r\n// }\r\n\r\n// const fetchLogin = async dataUser => {\r\n//   // const user = await axios.post('/users/login', dataUser);\r\n//   // const { data } = user;\r\n//   const { data } = await axios.post('/users/login', dataUser);\r\n//   setToken(data.token);\r\n//   return data;\r\n// };\r\n\r\n// async function fetchLogout() {\r\n//   await axios.post(`/users/logout`);\r\n// }\r\n\r\n// async function fetchСontacts() {\r\n//   const contacts = await axios.get(`/contacts`);\r\n//   const { data } = contacts;\r\n//   return data;\r\n// }\r\n\r\n// async function fetchAddNewContact(dataNewContact) {\r\n//   const { data } = await axios.post(`/contacts`, dataNewContact);\r\n//   return data;\r\n// }\r\n\r\n// async function fetchupdateContactFn(dataUpdateContact, idValue) {\r\n//   const { data } = await axios.patch(`/contacts/${idValue}`, dataUpdateContact);\r\n//   return data;\r\n// }\r\n\r\n// async function fetchdeleteContact(idValue) {\r\n//   const { data } = await axios.delete(`/contacts/${idValue}`);\r\n//   return data;\r\n// }\r\n\r\n//====================api.js (fetch)=============//\r\n\r\n// function fetchSignup(data) {\r\n//   const options = {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//     },\r\n//     body: JSON.stringify(data),\r\n//   };\r\n\r\n//   return fetch(`${BASE_URL}/users/signup`, options).then(res => {\r\n//     if (res.status === 400) {\r\n//       refs.textError.classList.remove('is-hidden');\r\n\r\n//       return;\r\n//     } else {\r\n//       return res.json();\r\n//     }\r\n//   });\r\n// }\r\n\r\n// function fetchLogin(data) {\r\n//   const options = {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//     },\r\n//     body: JSON.stringify(data),\r\n//   };\r\n\r\n//   return fetch(`${BASE_URL}/users/login`, options).then(res => {\r\n//     if (res.status === 400) {\r\n//       refs.textError.classList.remove('is-hidden');\r\n//       return;\r\n//     } else {\r\n//       return res.json();\r\n//     }\r\n//   });\r\n// }\r\n\r\n// function fetchLogout(tokenValue) {\r\n//   const options = {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       Authorization: `Bearer ${tokenValue}`,\r\n//     },\r\n//   };\r\n\r\n//   return fetch(`${BASE_URL}/users/logout`, options).then(res => {\r\n//     if (res.status === 401) {\r\n//       refs.textError.classList.remove('is-hidden');\r\n//       return;\r\n//     } else {\r\n//       return res.json();\r\n//     }\r\n//   });\r\n// }\r\n\r\n// function fetchСontacts(tokenValue) {\r\n//   const headers = {\r\n//     Authorization: `Bearer ${tokenValue}`,\r\n//   };\r\n\r\n//   return fetch(`${BASE_URL}/contacts`, {\r\n//     headers,\r\n//   }).then(res => res.json());\r\n// }\r\n\r\n// function fetchAddNewContact(data) {\r\n//   const options = {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${Token}`,\r\n//     },\r\n//     body: JSON.stringify(data),\r\n//   };\r\n\r\n//   return fetch(`${BASE_URL}/contacts`, options).then(res => {\r\n//     if (res.status === 400) {\r\n//       refs.textError.classList.remove('is-hidden');\r\n//       return;\r\n//     } else {\r\n//       return res.json();\r\n//     }\r\n//   });\r\n// }\r\n\r\n// function fetchupdateContactFn(data, tokenValue, idValue) {\r\n//   const options = {\r\n//     method: 'PATCH',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${tokenValue}`,\r\n//     },\r\n//     body: JSON.stringify(data),\r\n//   };\r\n\r\n//   return fetch(`${BASE_URL}/contacts/${idValue}`, options).then(res => {\r\n//     if (res.status === 401 || res.status === 400) {\r\n//       refs.textError.classList.remove('is-hidden');\r\n//       return;\r\n//     } else {\r\n//       return res.json();\r\n//     }\r\n//   });\r\n// }\r\n\r\n// function fetchdeleteContact(tokenValue, idValue) {\r\n//   const options = {\r\n//     method: 'DELETE',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${tokenValue}`,\r\n//     },\r\n//   };\r\n\r\n//   return fetch(`${BASE_URL}/contacts/${idValue}`, options).then(res => {\r\n//     if (res.status === 401 || res.status === 404) {\r\n//       refs.textError.classList.remove('is-hidden');\r\n//       return;\r\n//     } else {\r\n//       return res.json();\r\n//     }\r\n//   });\r\n// }\r\n"],"sourceRoot":""}