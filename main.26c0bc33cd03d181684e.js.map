{"version":3,"sources":["webpack:///./js/CRUD-axios-async.js"],"names":["refs","signupBtn","document","querySelector","loginBtn","logoutBtn","signupForm","loginForm","registrationBtn","textError","userName","userEmail","contentForm","formADD","listContacs","textNoContacts","formUpdate","BASE_URL","Token","onRegistrationUser","e","preventDefault","classList","add","data","options","currentTarget","elements","value","email","password","name","method","headers","body","JSON","stringify","fetch","then","res","status","remove","json","token","textContent","user","reset","catch","error","console","log","onLoginUser","getContacts","tokenValue","Authorization","fetchÐ¡ontacts","contacts","innerHTML","length","render","renderContacts","params","items","map","id","number","join","insertAdjacentHTML","addEventListener","newContact","item","push","target","dataset","type","nodeName","idValue","nameContactRef","numberContactRef","updateContact","updateContactFn"],"mappings":"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","file":"main.26c0bc33cd03d181684e.js","sourcesContent":["const refs = {\r\n  signupBtn: document.querySelector('.signup'),\r\n  loginBtn: document.querySelector('.login'),\r\n  logoutBtn: document.querySelector('.logout'),\r\n  signupForm: document.querySelector('.form-signup'),\r\n  loginForm: document.querySelector('.form-login'),\r\n  registrationBtn: document.querySelector('.form-signup button'),\r\n  textError: document.querySelector('.span-error'),\r\n  userName: document.querySelector('.user-info .name'),\r\n  userEmail: document.querySelector('.user-info .email'),\r\n  contentForm: document.querySelector('.content'),\r\n  formADD: document.querySelector('.form'),\r\n  listContacs: document.querySelector('.js-list'),\r\n  textNoContacts: document.querySelector('.span-no-contacts'),\r\n  formUpdate: document.querySelector('.form-update'),\r\n};\r\n//\r\n//\r\n//\r\n//\r\n\r\n//==========api.js=======//\r\nconst BASE_URL = 'https://goit-phonebook-api.herokuapp.com';\r\nlet Token = '';\r\n//\r\n//\r\n//\r\n\r\n//==================sign up======================//\r\n\r\nrefs.signupBtn.addEventListener('click', onSingUp);\r\n\r\nfunction onSingUp() {\r\n  refs.signupBtn.classList.add('is-hidden');\r\n  refs.loginBtn.classList.add('is-hidden');\r\n  refs.signupForm.classList.remove('is-hidden');\r\n  refs.signupForm.addEventListener('submit', onRegistrationUser);\r\n}\r\n\r\nfunction onRegistrationUser(e) {\r\n  e.preventDefault();\r\n  refs.textError.classList.add('is-hidden');\r\n  const userName = e.currentTarget.elements.userName.value;\r\n  const email = e.currentTarget.elements.email.value;\r\n  const password = e.currentTarget.elements.password.value;\r\n  const signupData = {\r\n    name: userName,\r\n    email,\r\n    password,\r\n  };\r\n  onGetDataUser(signupData);\r\n}\r\n\r\nfunction onGetDataUser(dataValue) {\r\n  fetchSignup(dataValue)\r\n    .then(data => {\r\n      Token = data.token;\r\n      refs.userName.textContent = data.user.name;\r\n      refs.userEmail.textContent = data.user.email;\r\n      refs.signupForm.reset();\r\n      refs.textError.classList.add('is-hidden');\r\n      refs.signupForm.classList.add('is-hidden');\r\n      refs.contentForm.classList.remove('is-hidden');\r\n      refs.logoutBtn.classList.remove('is-hidden');\r\n      refs.textNoContacts.classList.remove('is-hidden');\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\n//=================LOGIN===============//\r\n\r\nrefs.loginBtn.addEventListener('click', onLogin);\r\n\r\nfunction onLogin() {\r\n  refs.signupBtn.classList.add('is-hidden');\r\n  refs.loginBtn.classList.add('is-hidden');\r\n  refs.loginForm.classList.remove('is-hidden');\r\n  refs.loginForm.addEventListener('submit', onLoginUser);\r\n}\r\n\r\nfunction onLoginUser(e) {\r\n  e.preventDefault();\r\n  refs.textError.classList.add('is-hidden');\r\n  const email = e.currentTarget.elements.email.value;\r\n  const password = e.currentTarget.elements.password.value;\r\n  const loginData = {\r\n    email,\r\n    password,\r\n  };\r\n  onLoginDataUser(loginData);\r\n}\r\n\r\nfunction onLoginDataUser(dataValue) {\r\n  fetchLogin(dataValue)\r\n    .then(data => {\r\n      Token = data.token;\r\n      refs.userName.textContent = data.user.name;\r\n      refs.userEmail.textContent = data.user.email;\r\n      refs.loginForm.reset();\r\n      refs.textError.classList.add('is-hidden');\r\n      refs.loginForm.classList.add('is-hidden');\r\n      refs.contentForm.classList.remove('is-hidden');\r\n      refs.logoutBtn.classList.remove('is-hidden');\r\n      getContacts(Token);\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\n//=================LOGOUT===============//\r\n\r\nrefs.logoutBtn.addEventListener('click', onLogout);\r\n\r\nfunction onLogout() {\r\n  fetchLogout(Token)\r\n    .then(() => {\r\n      Token = '';\r\n      refs.userName.textContent = '';\r\n      refs.userEmail.textContent = '';\r\n      refs.logoutBtn.classList.add('is-hidden');\r\n      refs.textError.classList.add('is-hidden');\r\n      refs.loginForm.classList.add('is-hidden');\r\n      refs.contentForm.classList.add('is-hidden');\r\n      refs.signupBtn.classList.remove('is-hidden');\r\n      refs.loginBtn.classList.remove('is-hidden');\r\n      refs.listContacs.innerHTML = '';\r\n      refs.textNoContacts.classList.add('is-hidden');\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\n//=================getContacs===============//\r\n\r\nfunction getContacts(tokenValue) {\r\n  fetchÐ¡ontacts(tokenValue)\r\n    .then(data => {\r\n      renderContacts(data);\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\n//=============render contacts=======//\r\n\r\nfunction renderContacts(contacts) {\r\n  refs.listContacs.innerHTML = '';\r\n  if (contacts.length <= 0) {\r\n    refs.textNoContacts.classList.remove('is-hidden');\r\n    return;\r\n  }\r\n  render(contacts);\r\n}\r\n\r\n//===================template contact===========//\r\n\r\nfunction render(params) {\r\n  const items = params\r\n    .map(\r\n      ({ id, name, number }) =>\r\n        `<li>\r\n        <span class=\"js-name-${id}\">${name}: </span> <span class=\"js-number-${id}\">${number}</span>\r\n        \r\n          <button class=\"delete\" data-id=${id} data-type=\"delete\">delete</button>\r\n          <button class=\"update\" data-id=${id} data-type=\"update\">update</button>\r\n        </li>`,\r\n    )\r\n    .join('');\r\n  refs.listContacs.insertAdjacentHTML('beforeend', items);\r\n}\r\n\r\n//=============ADD contact=======//\r\n\r\nrefs.formADD.addEventListener('submit', onAddContact);\r\n\r\nfunction onAddContact(e) {\r\n  e.preventDefault();\r\n  const name = e.currentTarget.elements.name.value;\r\n  const number = e.currentTarget.elements.number.value;\r\n  const newContact = {\r\n    name,\r\n    number,\r\n  };\r\n  addNewContact(newContact)\r\n    .then(data => {\r\n      const item = [];\r\n      item.push(data);\r\n      render(item);\r\n      refs.textError.classList.add('is-hidden');\r\n    })\r\n    .then(() => {\r\n      newContact.name = '';\r\n      newContact.value = '';\r\n      refs.formADD.reset();\r\n      refs.textNoContacts.classList.add('is-hidden');\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\n//=============Delete and update contact=======//\r\n\r\nrefs.listContacs.addEventListener('click', handleContactClick);\r\n\r\nfunction handleContactClick(e) {\r\n  const { id, type } = e.target.dataset;\r\n\r\n  if (e.target.nodeName !== 'BUTTON') {\r\n    return;\r\n  }\r\n  ///////=============Deletecontact=======//\r\n  if (id && type === 'delete') {\r\n    deleteContact(Token, id)\r\n      .then(() => {\r\n        refs.textError.classList.add('is-hidden');\r\n        getContacts(Token);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  ///// //===========UPdate contact=======//\r\n\r\n  if (id && type === 'update') {\r\n    const nameContactRef = document.querySelector(`.js-name-${id}`);\r\n    const numberContactRef = document.querySelector(`.js-number-${id}`);\r\n    const updateContact = {\r\n      updateContact: nameContactRef.textContent,\r\n      number: numberContactRef.textContent,\r\n    };\r\n    refs.contentForm.classList.add('is-hidden');\r\n    refs.formUpdate.classList.remove('is-hidden');\r\n    refs.formUpdate.elements.name.value = updateContact.updateContact;\r\n    refs.formUpdate.elements.number.value = updateContact.number;\r\n\r\n    refs.formUpdate.addEventListener('submit', onUpdateContact);\r\n\r\n    function onUpdateContact(e) {\r\n      e.preventDefault();\r\n      const name = e.target.elements.name.value;\r\n      const number = e.target.elements.number.value;\r\n      const updateData = {\r\n        name,\r\n        number,\r\n      };\r\n      updateContactFn(updateData, Token, id)\r\n        .then(() => {\r\n          refs.textError.classList.add('is-hidden');\r\n          refs.formUpdate.classList.add('is-hidden');\r\n          refs.formUpdate.reset();\r\n          refs.contentForm.classList.remove('is-hidden');\r\n          getContacts(Token);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n  }\r\n}\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//====================api.js=============//\r\n\r\nfunction fetchSignup(data) {\r\n  const options = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  return fetch(`${BASE_URL}/users/signup`, options).then(res => {\r\n    if (res.status === 400) {\r\n      refs.textError.classList.remove('is-hidden');\r\n\r\n      return;\r\n    } else {\r\n      return res.json();\r\n    }\r\n  });\r\n}\r\n\r\nfunction fetchLogin(data) {\r\n  const options = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  return fetch(`${BASE_URL}/users/login`, options).then(res => {\r\n    if (res.status === 400) {\r\n      refs.textError.classList.remove('is-hidden');\r\n      return;\r\n    } else {\r\n      return res.json();\r\n    }\r\n  });\r\n}\r\n\r\nfunction fetchLogout(tokenValue) {\r\n  const options = {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${tokenValue}`,\r\n    },\r\n  };\r\n\r\n  return fetch(`${BASE_URL}/users/logout`, options).then(res => {\r\n    if (res.status === 401) {\r\n      refs.textError.classList.remove('is-hidden');\r\n      return;\r\n    } else {\r\n      return res.json();\r\n    }\r\n  });\r\n}\r\n\r\nfunction fetchÐ¡ontacts(tokenValue) {\r\n  const headers = {\r\n    Authorization: `Bearer ${tokenValue}`,\r\n  };\r\n\r\n  return fetch(`${BASE_URL}/contacts`, {\r\n    headers,\r\n  }).then(res => res.json());\r\n}\r\n\r\nfunction addNewContact(data) {\r\n  const options = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${Token}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  return fetch(`${BASE_URL}/contacts`, options).then(res => {\r\n    if (res.status === 400) {\r\n      refs.textError.classList.remove('is-hidden');\r\n      return;\r\n    } else {\r\n      return res.json();\r\n    }\r\n  });\r\n}\r\n\r\nfunction updateContactFn(data, tokenValue, idValue) {\r\n  const options = {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${tokenValue}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  return fetch(`${BASE_URL}/contacts/${idValue}`, options).then(res => {\r\n    if (res.status === 401 || res.status === 400) {\r\n      refs.textError.classList.remove('is-hidden');\r\n      return;\r\n    } else {\r\n      return res.json();\r\n    }\r\n  });\r\n}\r\n\r\nfunction deleteContact(tokenValue, idValue) {\r\n  const options = {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${tokenValue}`,\r\n    },\r\n  };\r\n\r\n  return fetch(`${BASE_URL}/contacts/${idValue}`, options).then(res => {\r\n    if (res.status === 401 || res.status === 404) {\r\n      refs.textError.classList.remove('is-hidden');\r\n      return;\r\n    } else {\r\n      return res.json();\r\n    }\r\n  });\r\n}\r\n"],"sourceRoot":""}